@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@rendermode InteractiveServer

<div class="menu">
    <h1>@nameof(PasskeyDemoApp)</h1>
    <div class="items">
        <a @onclick="() => GoBack()">🠈 Zurück</a>
        <a @onclick="@(() => NavigationManager.NavigateTo("/"))">⌂ Home</a>
        <a @onclick="@(() => NavigationManager.NavigateTo("/admin"))">⛨ Administration</a>

        <AuthorizeView>
            <NotAuthorized>
                <a @onclick="RedirectToLogin">👤 Login</a>
            </NotAuthorized>
            <Authorized>
                <a @onclick="@(() => NavigationManager.NavigateTo(PasskeyHelper.Constants.PageRoutes.PasskeyLogout))">👤 Logout</a>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private async Task GoBack()
    {
        await JS.InvokeVoidAsync("eval", "history.back()");
    }

    private void RedirectToLogin()
    {
        var route = $"{PasskeyHelper.Constants.PageRoutes.PasskeyRedirectToLogin}?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}";
        NavigationManager.NavigateTo(PasskeyHelper.Constants.PageRoutes.PasskeyRedirectToLogin);
    }
}
